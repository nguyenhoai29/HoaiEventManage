@page "/my-events"
@attribute [Authorize]

@using HoaiEventManager.CoreBusiness.Models
@using HoaiEventManager.UseCases.Registrations
@using System.Security.Claims

@inject ViewMyEventsUseCase ViewMyEventsUseCase
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<h3>Sự kiện của tôi</h3>
<p>Đây là danh sách các sự kiện bạn đã đăng ký tham gia.</p>

@if (myEvents == null)
{
    <p><em>Đang tải...</em></p>
}
else if (!myEvents.Any())
{
    <p>Bạn chưa đăng ký tham gia sự kiện nào. <a href="/events">Xem các sự kiện hiện có</a>.</p>
}
else
{
    <div class="row">
        @foreach (var evt in myEvents)
        {
            <div class="col-md-6 col-lg-4 mb-4">
                <div class="card h-100 shadow-sm">
                    <div class="card-header @(evt.Date < DateTime.Today ? "bg-secondary text-white" : "bg-primary text-white")">
                        @(evt.Date.Date < DateTime.Today ? "Đã diễn ra" : (evt.Date.Date == DateTime.Today ? "Đang diễn ra" : "Sắp diễn ra"))
                    </div>
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@evt.Name</h5>
                        <p class="card-text text-muted small">
                            <i class="bi bi-calendar-event"></i> @evt.Date.ToString("dd/MM/yyyy HH:mm")
                        </p>
                        <p class="card-text text-muted small">
                            <i class="bi bi-geo-alt-fill"></i> @evt.Location
                        </p>
                        <a href="/events/@evt.Id" class="btn btn-outline-primary mt-auto">Xem lại chi tiết</a>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private List<Event>? myEvents;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated ?? false)
        {
            var userId = user.FindFirstValue(ClaimTypes.NameIdentifier);
            if (userId != null)
            {
                myEvents = (await ViewMyEventsUseCase.ExecuteAsync(userId)).ToList();
            }
        }
    }
}
